// Generated by ReScript, PLEASE EDIT WITH CARE

import * as PervasivesU from "rescript/lib/es6/pervasivesU.js";

function _typeToSql(schemaType) {
  switch (schemaType) {
    case "int" :
        return "INTEGER";
    case "string" :
        return "TEXT";
    default:
      return PervasivesU.failwith("Unsupported schema type: " + schemaType);
  }
}

function _primaryKeyToSql(column) {
  if (column.primaryKey) {
    return " PRIMARY KEY";
  } else {
    return "";
  }
}

function _optionalToSql(column) {
  if (column.optionnal) {
    return " NULL";
  } else {
    return " NOT NULL";
  }
}

function _defaultToSql(column) {
  var $$default = column.default;
  if ($$default === "") {
    return "";
  } else {
    return " DEFAULT " + $$default;
  }
}

function _columnsToSql(schema) {
  return schema.map(function (column) {
                var schemaType = _typeToSql(column._type);
                var primaryKey = _primaryKeyToSql(column);
                var optionnal = _optionalToSql(column);
                var $$default = _defaultToSql(column);
                return "\t" + column.name + " " + schemaType + primaryKey + optionnal + $$default;
              }).join(",\n");
}

function create(tableName, schema) {
  var columnsToSql = _columnsToSql(schema);
  return "CREATE TABLE " + tableName + " (\n" + columnsToSql + "\n);";
}

export {
  _typeToSql ,
  _primaryKeyToSql ,
  _optionalToSql ,
  _defaultToSql ,
  _columnsToSql ,
  create ,
}
/* No side effect */
